# GitHub Actions workflow file.
#
# For more information, visit
# https://docs.github.com/actions/learn-github-actions.

---
name: build

# Makes workflow run on any push or pull request.
on:
  pull_request:
    branches:
      - "**"
  push:
    branches:
      - "**"
  workflow_dispatch:
    inputs:
      debug:
        default: "false"
        description: Use TMate session for debugging on failure
        required: false
      os:
        default: macos ubuntu windows
        description: Space separated list of operating systems
        required: false
      python:
        default: 3.8 3.9 3.10 3.11
        description: Space separated list of Python versions
        required: false

jobs:
  lint:
    name: Check code with formatter and linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v3
      - name: Install Node interpreter
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Install Prettier formatter
        run: |
          node --version
          npm --version
          npm install --global prettier
      - name: Check configuration file formatting
        run: prettier --check .
      - name: Install Python interpreter
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Cache Python packages
        uses: actions/cache@v3
        with:
          path: .venv
          key: python-3.10_ubuntu-latest_poetry-${{ hashFiles('poetry.lock') }}
      - name: Install Python dependencies
        run: |
          python --version
          python -m pip --version
          python -m pip install poetry
          poetry config virtualenvs.in-project true
          poetry lock --check
          poetry install --verbose
      - name: Static lint code
        run: |
          poetry run black --check .
          poetry run flake8 .
          poetry run mypy .
          mkdir docs
          cp README.md docs/index.md
          poetry run mkdocs build --strict
      - name: Setup tmate session if job failed
        if: >-
          ${{ failure() && github.event_name == 'workflow_dispatch' &&
          github.event.inputs.debug == 'true' }}
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3

  test:
    # Runs only job combinations specified as inputs during a manual workflow.
    if: >-
      ${{ github.event_name != 'workflow_dispatch' ||
      (contains(github.event.inputs.os, matrix.os) &&
      contains(github.event.inputs.python, matrix.python)) }}
    name: Run test suite for Python ${{ matrix.python }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      # Runs all job combinations on any push or pull request to the default
      # branch. Runs only Python 3.10 Ubuntu job for all other Git events.
      matrix:
        defaultBranch:
          - >-
            ${{ github.ref == format('refs/heads/{0}',
            github.event.repository.default_branch) || github.base_ref ==
            github.event.repository.default_branch }}
        exclude:
          - defaultBranch: false
        include:
          - os: ubuntu-latest
            python: "3.10"
        os:
          - macos
          - ubuntu
          - windows
        python:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v3
      - name: Install Node interpreter
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Install Prettier formatter
        run: |
          node --version
          npm --version
          npm install --global prettier
      - name: Install Python interpreter
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Cache Python packages
        uses: actions/cache@v3
        with:
          path: .venv
          key: >-
            python-${{ matrix.python }}_${{ runner.os }}_poetry-${{
            hashFiles('poetry.lock') }}
      - name: Install Python packages
        run: |
          python --version
          python -m pip --version
          python -m pip install poetry
          poetry config virtualenvs.in-project true
          poetry lock --check
          poetry install --verbose
      - name: Run test suite
        run: poetry run pytest
      - name: Setup tmate session if job failed
        if: >-
          ${{ failure() && github.event_name == 'workflow_dispatch' &&
          github.event.inputs.debug == 'true' }}
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3
