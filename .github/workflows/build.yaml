# GitHub Actions workflow file.
#
# For more information, visit
# https://docs.github.com/actions/learn-github-actions.

---
name: build

# Trigger workflow on any push or pull request.
on:
  pull_request:
    branches:
      - "**"
  push:
    branches:
      - "**"

jobs:
  lint:
    name: Check code with formatter and linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v3
      - name: Install Node interpreter
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Install Prettier formatter
        run: |
          node --version
          npm --version
          npm install --global prettier
      - name: Check configuration file formatting
        run: prettier --check .
      - name: Install Python interpreter
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Cache Python packages
        uses: actions/cache@v3
        with:
          path: .venv
          key: python-3.10_ubuntu-latest_poetry-${{ hashFiles('poetry.lock') }}
      - name: Install Python dependencies
        run: |
          python --version
          python -m pip --version
          python -m pip install poetry
          poetry config virtualenvs.in-project true
          poetry lock --check
          poetry install --verbose
      - name: Static lint code
        run: |
          poetry run black --check .
          poetry run flake8 .
          poetry run mypy .
          mkdir docs
          cp README.md docs/index.md
          poetry run mkdocs build --strict

  test:
    # GitHub contains function does not support literal arrays. For more
    # information, visit
    # https://github.community/t/passing-an-array-literal-to-contains-function-causes-syntax-error/17213.
    if: >-
      ${{ !contains(fromJson('["refs/heads/develop", "refs/heads/main",
      "refs/heads/master"]'), github.ref) }}
    name: Run test suite for Python 3.10 on Ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v3
      - name: Install Node interpreter
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Install Prettier formatter
        run: |
          node --version
          npm --version
          npm install --global prettier
      - name: Install Python interpreter
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Cache Python packages
        uses: actions/cache@v3
        with:
          path: .venv
          key: >-
            python-3.10_${{ runner.os }}_poetry-${{ hashFiles('poetry.lock') }}
      - name: Install Python packages
        run: |
          python --version
          python -m pip --version
          python -m pip install poetry
          poetry config virtualenvs.in-project true
          poetry lock --check
          poetry install --verbose
      - name: Run test suite
        run: poetry run pytest
