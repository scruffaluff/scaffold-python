# Python configuration file for building, dependencies, and tooling.
#
# For more information, visit
# https://snarky.ca/what-the-heck-is-pyproject-toml/.

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core^2.0.0"]

[project]
authors = [{ email = "{{ cookiecutter.author_email }}", name = "{{ cookiecutter.author_name }}" }]
description = "{{ cookiecutter.project_description }}"
documentation = "{{ cookiecutter.project_homepage }}"
dynamic = ["dependencies"]
homepage = "{{ cookiecutter.project_repository }}"
keywords = []
{%- if cookiecutter.license == "MIT" %}
license = "MIT"
{%- endif %}
name = "{{ cookiecutter.project_name }}"
readme = "README.md"
requires-python = "^3.9.0"
version = "{{ cookiecutter.project_version }}"

{% if cookiecutter.cli_support == "yes" -%}
[project.scripts]
{{ cookiecutter.project_name }} = "{{ cookiecutter.project_slug }}.__main__:app"
{% endif -%}

[tool.black]
line-length = 80

[tool.coverage.report]
exclude_lines = [
    "if sys.version_info.*",
    "pragma: no cover",
    "raise NotImplementedError",
]
fail_under = 100
show_missing = true

[tool.coverage.run]
branch = true
command_line = "-m pytest"
omit = []
source = ["{{ cookiecutter.project_slug }}"]

[tool.mypy]
check_untyped_defs = true
disallow_untyped_calls = false
disallow_untyped_defs = true
exclude = [
    '\.benchmarks/',
    '\.cache/',
    '\.hypothesis/',
    '\.pytest_cache/',
    '\.venv/',
    'tmp/',
]
ignore_missing_imports = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true

{%- if cookiecutter.cli_support == "yes" %}
[tool.poetry.dependencies]
typer = "^0.15.0"
{%- endif %}

[tool.poetry.group.dev.dependencies]
bandit = "^1.8.0"
black = { extras = ["jupyter"], version = "^24.10.0" }
coverage = { extras = ["toml"], version = "^7.6.0" }
flake8 = "^7.1.0"
flake8-bugbear = "^24.12.0"
flake8-docstrings = "^1.7.0"
flake8-import-order = "^0.18.0"
mccabe = "^0.7.0"
mkdocs = "^1.6.0"
mkdocs-material = "^9.5.0"
mkdocstrings = "^0.27.0"
mypy = "^1.14.0"
nbqa = "^1.9.0"
pymdown-extensions = "^10.14.0"
pyreadline3 = { markers = "sys_platform == 'win32'", version = "^3.5.0" }
pytest = "^8.3.0"
pytest-cov = "^6.0.0"
pytest-mock = "^3.14.0"
toml = "^0.10.0"
tox = "^4.23.0"
types-toml = "^0.10.0"

[tool.pytest.ini_options]
addopts = "-sv"
filterwarnings = ["ignore::DeprecationWarning"]
markers = [
    "e2e: mark as end to end test.",
    "unit: mark as unit test.",
]
python_classes = "Test*"
python_files = [
    "__init__.py",
    "test_*.py",
]
python_functions = ["test_*"]
testpaths = ["tests"]
