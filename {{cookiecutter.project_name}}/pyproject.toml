[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.black]
line-length = 80

[tool.coverage.report]
exclude_lines = [
    "if sys.version_info.*",
    "pragma: no cover",
    "raise NotImplementedError",
]
fail_under = 100
show_missing = true

[tool.coverage.run]
branch = true
command_line = "-m pytest"
omit = []
source = ["{{ cookiecutter.project_slug }}"]

[tool.poetry]
authors = ["{{ cookiecutter.author_name }} <{{ cookiecutter.author_email }}>"]
description = "{{ cookiecutter.project_description }}"
documentation = "{{ cookiecutter.project_docpage }}"
homepage = "{{ cookiecutter.project_repopage }}"
keywords = []
{%- if cookiecutter.license != "MIT" %}
license = "MIT"
{%- endif %}
name = "{{ cookiecutter.project_name }}"
readme = "README.md"
version = "{{ cookiecutter.project_version }}"

[tool.poetry.dependencies]
python = "^3.6.1"
{%- if cookiecutter.cli_support == "yes" %}
typer = "^0.3.2"
{%- endif %}
typing-extensions = "^3.7.4.3"

[tool.poetry.dev-dependencies]
bandit = "^1.7.0"
black = "^20.8b1"
coverage = { version = "^5.4.0", extras = ["toml"] }
flake8 = "^3.8.4"
flake8-bugbear = "^20.11.1"
flake8-docstrings = "^1.5.0"
flake8-import-order = "^0.18.1"
mccabe = "^0.6.1"
mkdocs = "^1.1.2"
mkdocs-material = "^6.2.7"
mkdocstrings = "^0.14.0"
mypy = "^0.800"
py-spy = "^0.3.4"
pymdown-extensions = "^8.1.1"
pytest = "^6.2.2"
pytest-cov = "^2.11.1"
pytest-mock = "^3.4.0"
toml = "^0.10.2"
tox = "^3.21.3"
{% if cookiecutter.cli_support == "yes" -%}
typer-cli = "^0.0.11"

[tool.poetry.scripts]
{{ cookiecutter.project_name }} = "{{ cookiecutter.project_slug }}.__main__:app"
{% endif -%}

[tool.pytest.ini_options]
addopts = "-sv"
markers = [
    "functional: mark as functional test.",
    "integration: mark as integration test.",
    "unit: mark as unit test.",
]
python_classes = "Test*"
python_files = [
    "__init__.py",
    "test_*.py",
]
python_functions = ["test_*"]
testpaths = ["tests"]
