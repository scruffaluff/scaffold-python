# GitHub Actions workflow file.
#
# For more information, visit
# https://docs.github.com/actions/learn-github-actions.

name: build

on:
  push:
    branches:
      - develop
      - feature/*
      - main
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v2
      {%- if cookiecutter.prettier_support == "yes" %}
      - name: Install Node interpreter
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Install Prettier formatter
        run: npm install -g prettier
      - name: Check configuration file formatting
        run: prettier --check .
      {% endif -%}
      - name: Install Python interpreter
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Cache Python packages
        uses: actions/cache@v2
        with:
          path: .venv
          key: python-3.9_ubuntu-latest_poetry-${{ hashFiles('poetry.lock') }}
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip poetry setuptools wheel
          poetry config virtualenvs.in-project true
          poetry install -v
      - name: Static lint code
        run: |
          poetry run bandit -ilr src/
          poetry run black --check .
          poetry run python scripts/build_docs.py
          poetry run flake8 examples/ scripts/ src/ tests/
          poetry run mypy examples/ scripts/ src/ tests/

  test:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        python: [3.6, 3.7, 3.8, 3.9]
    runs-on: {{ "${{ matrix.os }}" }}
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v2
      - name: Install Python interpreter
        uses: actions/setup-python@v2
        with:
          python-version: {{ "${{ matrix.python }}" }}
      - name: Cache Python packages
        uses: actions/cache@v2
        with:
          path: .venv
          key: python-${{ matrix.python }}_${{ matrix.os }}_poetry-${{ hashFiles('poetry.lock') }}
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip poetry setuptools wheel
          poetry config virtualenvs.in-project true
          poetry install -v
      - name: Build and test code
        run: poetry run pytest --cov
